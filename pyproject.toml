[project]
name = "declare4pylon"
version = "0.0.1"
description = "DECLARE constraints implementation for pylon-lib."
authors = [{ name = "Salvatore Laiso", email = "salvatorelaiso@gmail.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.10,<3.14"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "jaxtyping>=0.3.1",
    "numpy>=2.2.4",
    "pylon-lib>=0.1.0",
    "torch>=2.6.0",
]

[project.urls]
Homepage = "https://salvatorelaiso.github.io/declare4pylon/"
Repository = "https://github.com/salvatorelaiso/declare4pylon"
Documentation = "https://salvatorelaiso.github.io/declare4pylon/"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.22.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.9.2",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"



[tool.mypy]
files = ["src"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
follow_untyped_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py313"
line-length = 120
fix = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D100",     # ignore missing docstring in public module
    "D203",     # ignore `incorrect-blank-line-before-class` (D203) which is not compatible with `no-blank-line-before-class` (D211)
    "D213",     # ignore `multi-line-summary-second-line` (D213) which is not compatible with `multi-line-summary-first-line` (D213)
    "F722",     # ignore F722 (see https://docs.kidger.site/jaxtyping/faq/#flake8-or-ruff-are-throwing-an-error)
    "COM812",   # warning states it may cause conflicts when used with the formatter
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = [
    "D104", # missing docstring in public package
]
"tests/**/*.py" = [
    "D100",     # missing docstring in public module
    "D101",     # missing docstring in public class
    "D103",     # ignore missing docstring in public function
    "S101",     # ignore use of `assert` detected
    "ANN201",   # ignore missing return type annotation for public function
    "FBT",      # ignore boolean-typed positional argument in function definition
    "PLR2004",  # ignore magic value used in comparison
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]
